{"version":3,"file":"static/js/168.b56b7514.chunk.js","mappings":"kOAyBA,EAxBiB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAClB,OACE,wBACGA,EAAKC,KAAI,SAAAC,GACR,IAAQC,EAA2BD,EAA3BC,GAAIC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,aACZC,EAASD,EAAY,yCACWA,GAClC,oEAEJ,OACE,0BACG,KACD,gBAAKE,IAAKD,EAAQE,IAAKJ,EAAMK,MAAO,OACpC,uBAAIL,MAHGD,EAMZ,KAGN,E,2BCsBD,EArCa,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAU,iBAAaF,EAAb,YAGhB,GAAwCG,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAA6BF,EAAAA,EAAAA,UAAS,MAAtC,eAAOG,EAAP,KAAiBC,EAAjB,KAiBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAU,mCAAG,gHAEIC,EAAAA,EAAAA,IAAqBR,GAFzB,OAETS,EAFS,OAGPrB,EAASqB,EAATrB,KACRe,EAAgBf,GAJD,gDAMfiB,EAAS,KAAMK,SACfC,MAAM,SAAUP,GAPD,yDAAH,qDAUhBG,GAXoB,CAYrB,GAAE,CAACT,EAASE,EAAYI,KAEvB,yBACoB,OAAjBF,GACC,0BACE,uBAAG,gDAGL,SAAC,EAAD,CAAUd,KAAMc,KAIvB,C","sources":["components/CastList/CastList.jsx","pages/CastPage/CastPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nconst CastList = ({ cast }) => {\n  return (\n    <ul>\n      {cast.map(el => {\n        const { id, name, profile_path } = el;\n        const poster = profile_path\n          ? `https://image.tmdb.org/t/p/w400${profile_path}`\n          : 'https://dummyimage.com/200x300/99cccc.gifffffff&text=No%20poster!';\n\n        return (\n          <li key={id}>\n            {' '}\n            <img src={poster} alt={name} width={200} />\n            <p>{name}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nCastList.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\nexport default CastList;","import CastList from 'components/CastList/CastList';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { onFetchMoviesDetalis } from 'service/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const apiCredits = `/movie/${movieId}/credits`;\n\n  // const apiDataMovie = `/movie/${movieId}`;\n  const [movieCredits, setMovieCredits] = useState(null);\n\n  const [errorMes, setError] = useState(null);\n  // const [page, setPage] = 1;\n\n  useEffect(() => {\n    if (!movieId) return;\n    const dataMovies = async () => {\n      try {\n        const data = await onFetchMoviesDetalis(apiCredits);\n        const { cast } = data;\n        setMovieCredits(cast);\n      } catch (error) {\n        setError(error.message);\n        alert('ERROR:', errorMes);\n      }\n    };\n    dataMovies();\n  }, [movieId, apiCredits, errorMes]);\n  return (\n    <div>\n      {movieCredits === null ? (\n        <div>\n          <p>There is no information about the actors</p>\n        </div>\n      ) : (\n        <CastList cast={movieCredits} />\n      )}\n    </div>\n  );\n};\n\nexport default Cast;"],"names":["cast","map","el","id","name","profile_path","poster","src","alt","width","movieId","useParams","apiCredits","useState","movieCredits","setMovieCredits","errorMes","setError","useEffect","dataMovies","onFetchMoviesDetalis","data","message","alert"],"sourceRoot":""}