{"version":3,"file":"static/js/142.33f4d308.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js","services/getImage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledMovieItem = styled.li`\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const StyledLink = styled(Link)`\n  list-style-type: style none;\n  text-decoration: none;\n`;\n\nexport const Title = styled.p`\n  margin: 10px;\n  margin-top: 5px;\n  font-size: 24px;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { getPoster } from 'services/getImage';\nimport { Image, StyledLink, StyledMovieItem, Title } from './MovieList.styled';\n\nexport const MovieItem = ({ id, title, name, poster_path }) => {\n  const location = useLocation();\n  const src = getPoster(poster_path);\n\n  return (\n    <StyledMovieItem key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image src={src} alt={title || name} />\n        <Title>{title || name}</Title>\n      </StyledLink>\n    </StyledMovieItem>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n};","import PropTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <StyledMovieList>\n      {movies.map(movie => {\n        return (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            name={movie.name}\n            poster_path={movie.poster_path}\n          />\n        );\n      })}\n    </StyledMovieList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};","import styled from 'styled-components';\n\nexport const HomeContainer = styled.div`\n  padding: 10px;\n`;\nexport const TrendingMovies = styled.p`\n  text-align: center;\n\n  margin-bottom: 10px;\n  font-weight: bold;\n  line-height: 1.1;\n  font-size: 32px;\n  letter-spacing: 0.05em;\n`;","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getTrandingMovies } from 'services/api';\nimport { HomeContainer, TrendingMovies } from './Home.styled';\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrandingMovies = async () => {\n      try {\n        setLoading(true);\n        const moviesList = await getTrandingMovies();\n        setMovies(moviesList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrandingMovies();\n  }, []);\n  return (\n    <HomeContainer>\n      <TrendingMovies>Trending movies</TrendingMovies>\n      {loading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#3f51b5\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <MovieList movies={movies} />\n    </HomeContainer>\n  );\n};\n\nexport default Home;","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6da8758eb40e221013709d63079fd9c4';\n\nconst getTrandingMovies = async () => {\n  const response = await axios.get(`${URL}trending/all/day?api_key=${API_KEY}`);\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nconst getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nconst getCastDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n\nconst getReview = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  console.log('review', response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrandingMovies,\n  getMovies,\n  getMovieDetails,\n  getCastDetails,\n  getReview,\n};","import noPoster from '../images/No_image_poster.png';\nexport function getPoster(poster) {\n  if (poster) {\n    return `https://image.tmdb.org/t/p/w300${poster}`;\n  } else {\n    return noPoster;\n  }\n}"],"names":["StyledMovieList","styled","StyledMovieItem","Image","StyledLink","Link","Title","MovieItem","id","title","name","poster_path","location","useLocation","src","getPoster","to","state","from","alt","MovieList","movies","map","movie","HomeContainer","TrendingMovies","Home","useState","setMovies","loading","setLoading","useEffect","fetchTrandingMovies","getTrandingMovies","moviesList","console","log","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","URL","API_KEY","axios","response","data","results","getMovies","query","getMovieDetails","movieId","getCastDetails","cast","getReview","poster","noPoster"],"sourceRoot":""}