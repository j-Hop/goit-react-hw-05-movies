{"version":3,"file":"static/js/169.9af8c252.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/getImage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 24px;\n  margin: 20px;\n`;\n\nexport const Image = styled.img`\n  width: 50%;\n  height: auto;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 10px;\n`;\n\nexport const InfoContainer = styled.div`\n  display: block;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 10px;\n`;\n\nexport const DetailsTitle = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n  display: block;\n  max-width: 80%;\n  margin-bottom: 15px;\n  text-align: justify;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  margin-top: 50px;\n`;\n\nexport const NavItem = styled.li`\n  margin-right: 15px;\n  text-align: center;\n`;\n\nexport const NavLinkStyl = styled(NavLink)`\n  position: relative;\n  display: block;\n\n  font-weight: 500;\n  font-size: 28px;\n  line-height: 1.5;\n  letter-spacing: 0.02em;\n  text-decoration: none;\n  color: #33c4ac;\n\n  border: solid 1px #33c4ac;\n  border-radius: 4px;\n  padding: 0 10px;\n  text-align: justify;\n  justify-content: baseline;\n\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: #2ca08c;\n  }\n\n  &.current {\n    color: #2ca08c;\n  }\n`;","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { getPoster } from 'services/getImage';\nimport {\n  Container,\n  Description,\n  DetailsTitle,\n  Image,\n  InfoContainer,\n  MovieTitle,\n  NavItem,\n  NavLinkStyl,\n  NavList,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async id => {\n      try {\n        setLoading(true);\n        const movieDetailsData = await getMovieDetails(id);\n        setMovieDetails(movieDetailsData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#3f51b5\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <Link to={backLinkLocationRef.current}>GO Back</Link>\n      {movieDetails && (\n        <Container>\n          <Image\n            src={getPoster(movieDetails.poster_path)}\n            alt={movieDetails.title || movieDetails.name}\n          />\n          <InfoContainer>\n            <div>\n              {' '}\n              <MovieTitle>{movieDetails.title || movieDetails.name}</MovieTitle>\n              <Description>Rating: {movieDetails.vote_average}</Description>\n              <DetailsTitle>Overview</DetailsTitle>\n              <Description>{movieDetails.overview}</Description>\n              <DetailsTitle>Genres</DetailsTitle>\n              <Description>\n                {movieDetails?.genres?.length > 0 && movieDetails?.genres\n                  ? movieDetails.genres.map(genre => genre.name).join(', ')\n                  : 'NO Genres'}\n              </Description>\n            </div>\n\n            <NavList>\n              <NavItem>\n                <NavLinkStyl to=\"cast\">Cast</NavLinkStyl>\n              </NavItem>\n              <NavItem>\n                <NavLinkStyl to=\"reviews\">Review</NavLinkStyl>\n              </NavItem>\n            </NavList>\n          </InfoContainer>\n        </Container>\n      )}\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6da8758eb40e221013709d63079fd9c4';\n\nconst getTrandingMovies = async () => {\n  const response = await axios.get(`${URL}trending/all/day?api_key=${API_KEY}`);\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nconst getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nconst getCastDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n\nconst getReview = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  console.log('review', response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrandingMovies,\n  getMovies,\n  getMovieDetails,\n  getCastDetails,\n  getReview,\n};","import noPoster from '../images/No_image_poster.png';\nexport function getPoster(poster) {\n  if (poster) {\n    return `https://image.tmdb.org/t/p/w300${poster}`;\n  } else {\n    return noPoster;\n  }\n}"],"names":["Container","styled","Image","InfoContainer","MovieTitle","DetailsTitle","Description","NavList","NavItem","NavLinkStyl","NavLink","useState","movieDetails","setMovieDetails","loading","setLoading","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","fetchMovieDetails","id","getMovieDetails","movieDetailsData","console","log","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","to","current","src","getPoster","poster_path","alt","title","name","vote_average","overview","genres","length","map","genre","join","Suspense","URL","API_KEY","getTrandingMovies","axios","response","data","results","getMovies","query","getCastDetails","cast","getReview","poster","noPoster"],"sourceRoot":""}