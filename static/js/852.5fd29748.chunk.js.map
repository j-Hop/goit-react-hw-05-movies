{"version":3,"file":"static/js/852.5fd29748.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js","services/getImage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledMovieItem = styled.li`\n  border-radius: 4px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const StyledLink = styled(Link)`\n  list-style-type: style none;\n  text-decoration: none;\n`;\n\nexport const Title = styled.p`\n  margin: 10px;\n  margin-top: 5px;\n  font-size: 24px;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { getPoster } from 'services/getImage';\nimport { Image, StyledLink, StyledMovieItem, Title } from './MovieList.styled';\n\nexport const MovieItem = ({ id, title, name, poster_path }) => {\n  const location = useLocation();\n  const src = getPoster(poster_path);\n\n  return (\n    <StyledMovieItem key={id}>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <Image src={src} alt={title || name} />\n        <Title>{title || name}</Title>\n      </StyledLink>\n    </StyledMovieItem>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n  name: PropTypes.string,\n  poster_path: PropTypes.string,\n};","import PropTypes from 'prop-types';\nimport { MovieItem } from './MovieItem';\nimport { StyledMovieList } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <StyledMovieList>\n      {movies.map(movie => {\n        return (\n          <MovieItem\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            name={movie.name}\n            poster_path={movie.poster_path}\n          />\n        );\n      })}\n    </StyledMovieList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array,\n};","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin: 0px auto 25px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Svg = {\n  width: '80%',\n  height: '80%',\n};","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { useSearchParams } from 'react-router-dom';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { getMovies } from 'services/api';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n  Svg,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!movie) return;\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const moviesList = await getMovies(movie);\n        setMovies(moviesList);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movie]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchValue = form.elements.search.value;\n\n    setSearchParams({ query: searchValue });\n    // e.target.elements.search.value = '';\n    form.reset();\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={onFormSubmit}>\n        <SearchFormInput\n          name=\"search\"\n          type=\"text\"\n          required\n          placeholder=\"Search movies...\"\n        />\n        <SearchFormButton type=\"submit\">\n          <BiSearchAlt style={Svg} />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n      </SearchForm>\n      {loading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#3f51b5\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <MovieList movies={movies} />\n    </>\n  );\n};\nexport default Movies;","import axios from 'axios';\nconst URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6da8758eb40e221013709d63079fd9c4';\n\nconst getTrandingMovies = async () => {\n  const response = await axios.get(`${URL}trending/all/day?api_key=${API_KEY}`);\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nconst getMovies = async query => {\n  const response = await axios.get(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n\n  return response.data;\n};\n\nconst getCastDetails = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return response.data.cast;\n};\n\nconst getReview = async movieId => {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  console.log('review', response.data.results);\n  return response.data.results;\n};\n\nexport {\n  getTrandingMovies,\n  getMovies,\n  getMovieDetails,\n  getCastDetails,\n  getReview,\n};","import noPoster from '../images/No_image_poster.png';\nexport function getPoster(poster) {\n  if (poster) {\n    return `https://image.tmdb.org/t/p/w300${poster}`;\n  } else {\n    return noPoster;\n  }\n}"],"names":["StyledMovieList","styled","StyledMovieItem","Image","StyledLink","Link","Title","MovieItem","id","title","name","poster_path","location","useLocation","src","getPoster","to","state","from","alt","MovieList","movies","map","movie","SearchForm","SearchFormButton","SearchFormInput","SearchFormButtonLabel","Svg","width","height","useState","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","getMovies","moviesList","console","log","onSubmit","e","preventDefault","form","currentTarget","searchValue","elements","search","value","query","reset","type","required","placeholder","style","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","URL","API_KEY","getTrandingMovies","axios","response","data","results","getMovieDetails","movieId","getCastDetails","cast","getReview","poster","noPoster"],"sourceRoot":""}