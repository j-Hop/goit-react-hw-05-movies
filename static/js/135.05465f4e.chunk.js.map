{"version":3,"file":"static/js/135.05465f4e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"containerDetails\":\"MovieDetails_containerDetails__qkDYF\",\"image\":\"MovieDetails_image__c1FeV\"};","import { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Route,\n  Routes,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { onFetchMoviesDetalis } from 'service/api';\nimport css from './MovieDetails.module.css';\nimport Loader from 'components/Loader/Loader';\n// import Cast from 'pages/CastPage/CastPage';\n// import Reviews from 'pages/ReviewsPage/ReviewsPage';\n\nconst Cast = lazy(() => import('pages/CastPage/CastPage'));\nconst Reviews = lazy(() => import('pages/ReviewsPage/ReviewsPage'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const apiDataMovie = `/movie/${movieId}`;\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [errorMes, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const dataMovies = async () => {\n      try {\n        setIsLoading(true);\n        const data = await onFetchMoviesDetalis(apiDataMovie);\n        setMovieDetails(data);\n      } catch (error) {\n        setError(error.message);\n        alert('ERROR:', errorMes);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    dataMovies();\n  }, [apiDataMovie, errorMes, movieId]);\n\n  const {\n    poster_path,\n    id,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = movieDetails;\n  const poster = poster_path\n    ? `https://image.tmdb.org/t/p/w400${poster_path}`\n    : 'https://dummyimage.com/300x450/99cccc.gifffffff&text=No%20poster!';\n  return (\n    <section>\n      <Link to={backLink.current}>Go back</Link>\n      {isLoading && <Loader />}\n      {movieDetails && (\n        <div key={id} className={css.containerDetails}>\n          <div className={css.image}>\n            {' '}\n            <img src={poster} alt={title} width=\"360\" />\n          </div>\n          <div>\n            <h2>\n              {title}({release_date?.slice(0, 4)})\n            </h2>\n            <h3>Release date: {release_date}</h3>\n            <p>User Score: {(vote_average * 10).toFixed(0)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {genres?.map(genre => {\n                return <span key={genre.id}>{genre.name} </span>;\n              })}\n            </p>\n          </div>\n        </div>\n      )}\n      <div>\n        <NavLink to=\"cast\">Cast</NavLink>\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />}></Route>\n          <Route path=\"reviews\" element={<Reviews />}></Route>\n        </Routes>\n      </Suspense>\n    </section>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst KEY_API = '45b8ac4dc4bcb28ba01349825b9d5176';\nconst URL = 'https://api.themoviedb.org/3';\nexport const fetchData = async apiType => {\n  const { data } = await axios.get(\n    `${URL}${apiType}?api_key=${KEY_API}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const onFetchMoviesDetalis = async apiType => {\n  const { data } = await axios.get(\n    `${URL}${apiType}?api_key=${KEY_API}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (\n  apiType,\n  searchSubmit,\n  quantityPage\n) => {\n  const { data } = await axios.get(\n    `${URL}${apiType}?api_key=${KEY_API}&query=${searchSubmit}&page=${quantityPage}&language=en-US`\n  );\n  return data;\n};"],"names":["Cast","lazy","Reviews","movieId","useParams","apiDataMovie","useState","movieDetails","setMovieDetails","errorMes","setError","isLoading","setIsLoading","location","useLocation","backLink","useRef","state","from","useEffect","dataMovies","onFetchMoviesDetalis","data","message","alert","poster_path","id","title","vote_average","overview","genres","release_date","poster","to","current","Loader","className","css","src","alt","width","slice","toFixed","map","genre","name","Suspense","fallback","path","element","KEY_API","URL","fetchData","apiType","axios","fetchSearchMovies","searchSubmit","quantityPage"],"sourceRoot":""}